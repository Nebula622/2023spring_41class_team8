{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\(S)samsungFLEX5\\\\Documents\\\\GitHub\\\\2023spring_41class_team8\\\\fe\\\\src\\\\pages\\\\register\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const navigate = useNavigate();\n  const [emailMsg, setEmailMsg] = useState(\"\");\n  const [pwdMsg, setPwdMsg] = useState('');\n  const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n\n  //const isEmailValid = validateEmail(email);\n  const isPwdValid = validatePwd(password);\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    console.log(\"Password:\", password);\n    const currPwd = e.target.value;\n    setPassword(currPwd);\n    if (!validatePwd(currPwd)) {\n      setPwdMsg(\"영문, 숫자, 특수기호 조합으로 8~16자리로 입력해주세요.\");\n    } else {\n      setPwdMsg(\"안전한 비밀번호입니다.\");\n    }\n  };\n  const handlePassword2Change = e => {\n    console.log(\"Password2:\", password2);\n    const currConfirmPwd = e.target.value;\n    setPassword2(currConfirmPwd);\n    if (currConfirmPwd !== password) {\n      setConfirmPwdMsg(\"비밀번호가 일치하지 않습니다.\");\n    } else {\n      setConfirmPwdMsg(\"올바른 비밀번호입니다.\");\n    }\n  };\n  const duplicateHandler = e => {\n    //중복 확인 성공하면 성공팝업, 아니면 실패 팝업\n    //const isDuplicate = checkDuplicate(); // 중복 확인 로직을 구현한 함수\n    /* if (isDuplicate) {\n      setDuplicateError(true); // 중복된 이메일이 있다면 에러 설정\n    } else {\n      setDuplicateError(false); // 중복된 이메일이 없다면 에러 해제\n      setSuccessPopup(true); // 중복 확인 성공 팝업 설정\n    } */\n    setEmailMsg(\"중복 검사 성공했습니다\");\n  };\n  const validatePassword = password => {\n    return password.toLowerCase().match(/^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Perform register logic here, e.g., send email and password to an API for authentication\n    // password = password2 이면 로그인 아니면 팝업\n    if (password === password2) {\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n      setPassword(password);\n      setSuccessPopup(true);\n      navigate(\"/\");\n    } else {\n      setFailurePopup(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uBA54\\uC77C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: duplicateHandler,\n        children: \"\\uC911\\uBCF5 \\uAC80\\uC0AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), isEmailValid && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC911\\uBCF5\\uB41C \\uC774\\uBA54\\uC77C\\uC785\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password2,\n        onChange: handlePassword2Change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onSubmit: handleSubmit,\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"/zsJ/3bmVOMbVwzlXMVF7rd13Qg=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","password2","setPassword2","navigate","emailMsg","setEmailMsg","pwdMsg","setPwdMsg","confirmPwdMsg","setConfirmPwdMsg","isPwdValid","validatePwd","handleEmailChange","e","target","value","handlePasswordChange","console","log","currPwd","handlePassword2Change","currConfirmPwd","duplicateHandler","validatePassword","toLowerCase","match","handleSubmit","preventDefault","setSuccessPopup","setFailurePopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","isEmailValid","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/(S)samsungFLEX5/Documents/GitHub/2023spring_41class_team8/fe/src/pages/register/register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const navigate = useNavigate()\n  \n  const [emailMsg, setEmailMsg] = useState(\"\");\n  const [pwdMsg, setPwdMsg] = useState('');\n  const [confirmPwdMsg, setConfirmPwdMsg]= useState(\"\")\n\n  //const isEmailValid = validateEmail(email);\n  const isPwdValid = validatePwd(password);\n  \n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    console.log(\"Password:\", password);\n    const currPwd = e.target.value;\n    setPassword(currPwd);\n\n    if (!validatePwd(currPwd)) {\n      setPwdMsg(\"영문, 숫자, 특수기호 조합으로 8~16자리로 입력해주세요.\")\n    } else {\n      setPwdMsg(\"안전한 비밀번호입니다.\")\n    }\n  };\n\n  const handlePassword2Change = (e) => {\n    console.log(\"Password2:\", password2);\n    const currConfirmPwd = e.target.value;\n    setPassword2(currConfirmPwd);\n\n      if (currConfirmPwd !== password) {\n        setConfirmPwdMsg(\"비밀번호가 일치하지 않습니다.\")\n      } else {\n        setConfirmPwdMsg(\"올바른 비밀번호입니다.\")\n      }\n  };\n\n  const duplicateHandler = (e) => {\n    //중복 확인 성공하면 성공팝업, 아니면 실패 팝업\n    //const isDuplicate = checkDuplicate(); // 중복 확인 로직을 구현한 함수\n    /* if (isDuplicate) {\n      setDuplicateError(true); // 중복된 이메일이 있다면 에러 설정\n    } else {\n      setDuplicateError(false); // 중복된 이메일이 없다면 에러 해제\n      setSuccessPopup(true); // 중복 확인 성공 팝업 설정\n    } */\n    setEmailMsg(\"중복 검사 성공했습니다\")\n  };\n\n  \n\n\n\n  const validatePassword = (password) => {\n    return password\n      .toLowerCase()\n      .match(/^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Perform register logic here, e.g., send email and password to an API for authentication\n    // password = password2 이면 로그인 아니면 팝업\n    if (password === password2){\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n      setPassword(password);\n\n      setSuccessPopup(true);\n      navigate(\"/\");\n    } else{\n      setFailurePopup(true);\n    }\n    \n\n  };\n\n  return (\n    <div className=\"register\">\n      <div>회원 가입</div>\n      <div>\n        <label>이메일:</label>\n        <input type=\"email\" value={email} onChange={handleEmailChange} />\n        <button type=\"submit\" onClick={duplicateHandler}>중복 검사</button>\n        {isEmailValid && <div>중복된 이메일입니다.</div>} {/* 중복 에러 표시 */}\n      </div>\n      <div>\n        <label>비밀번호:</label>\n        <input type=\"password\" value={password} onChange={handlePasswordChange} />\n      </div>\n      <div>\n        <label>비밀번호 확인:</label>\n        <input type=\"password\" value={password2} onChange={handlePassword2Change} />\n      </div>\n      \n      <button type=\"submit\" onSubmit={handleSubmit}>제출</button>\n      \n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAEnB,QAAQ,CAAC,EAAE,CAAC;;EAErD;EACA,MAAMoB,UAAU,GAAGC,WAAW,CAACZ,QAAQ,CAAC;EAExC,MAAMa,iBAAiB,GAAIC,CAAC,IAAK;IAC/Bf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAClCI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEnB,QAAQ,CAAC;IAClC,MAAMoB,OAAO,GAAGN,CAAC,CAACC,MAAM,CAACC,KAAK;IAC9Bf,WAAW,CAACmB,OAAO,CAAC;IAEpB,IAAI,CAACR,WAAW,CAACQ,OAAO,CAAC,EAAE;MACzBZ,SAAS,CAAC,mCAAmC,CAAC;IAChD,CAAC,MAAM;MACLA,SAAS,CAAC,cAAc,CAAC;IAC3B;EACF,CAAC;EAED,MAAMa,qBAAqB,GAAIP,CAAC,IAAK;IACnCI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEjB,SAAS,CAAC;IACpC,MAAMoB,cAAc,GAAGR,CAAC,CAACC,MAAM,CAACC,KAAK;IACrCb,YAAY,CAACmB,cAAc,CAAC;IAE1B,IAAIA,cAAc,KAAKtB,QAAQ,EAAE;MAC/BU,gBAAgB,CAAC,kBAAkB,CAAC;IACtC,CAAC,MAAM;MACLA,gBAAgB,CAAC,cAAc,CAAC;IAClC;EACJ,CAAC;EAED,MAAMa,gBAAgB,GAAIT,CAAC,IAAK;IAC9B;IACA;IACA;AACJ;AACA;AACA;AACA;AACA;IACIR,WAAW,CAAC,cAAc,CAAC;EAC7B,CAAC;EAMD,MAAMkB,gBAAgB,GAAIxB,QAAQ,IAAK;IACrC,OAAOA,QAAQ,CACZyB,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,sDAAsD,CAAC;EAClE,CAAC;EAED,MAAMC,YAAY,GAAIb,CAAC,IAAK;IAC1BA,CAAC,CAACc,cAAc,CAAC,CAAC;IAClB;IACA;IACA,IAAI5B,QAAQ,KAAKE,SAAS,EAAC;MACzBgB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAErB,KAAK,CAAC;MAC5BoB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEnB,QAAQ,CAAC;MAClCC,WAAW,CAACD,QAAQ,CAAC;MAErB6B,eAAe,CAAC,IAAI,CAAC;MACrBzB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAK;MACJ0B,eAAe,CAAC,IAAI,CAAC;IACvB;EAGF,CAAC;EAED,oBACEnC,OAAA;IAAKoC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBrC,OAAA;MAAAqC,QAAA,EAAK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBzC,OAAA;MAAAqC,QAAA,gBACErC,OAAA;QAAAqC,QAAA,EAAO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBzC,OAAA;QAAO0C,IAAI,EAAC,OAAO;QAACrB,KAAK,EAAElB,KAAM;QAACwC,QAAQ,EAAEzB;MAAkB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjEzC,OAAA;QAAQ0C,IAAI,EAAC,QAAQ;QAACE,OAAO,EAAEhB,gBAAiB;QAAAS,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC9DI,YAAY,iBAAI7C,OAAA;QAAAqC,QAAA,EAAK;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNzC,OAAA;MAAAqC,QAAA,gBACErC,OAAA;QAAAqC,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBzC,OAAA;QAAO0C,IAAI,EAAC,UAAU;QAACrB,KAAK,EAAEhB,QAAS;QAACsC,QAAQ,EAAErB;MAAqB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNzC,OAAA;MAAAqC,QAAA,gBACErC,OAAA;QAAAqC,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBzC,OAAA;QAAO0C,IAAI,EAAC,UAAU;QAACrB,KAAK,EAAEd,SAAU;QAACoC,QAAQ,EAAEjB;MAAsB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eAENzC,OAAA;MAAQ0C,IAAI,EAAC,QAAQ;MAACI,QAAQ,EAAEd,YAAa;MAAAK,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtD,CAAC;AAEV;AAACvC,EAAA,CAvGQD,QAAQ;EAAA,QAIEH,WAAW;AAAA;AAAAiD,EAAA,GAJrB9C,QAAQ;AAyGjB,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}