{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\(S)samsungFLEX5\\\\Documents\\\\GitHub\\\\2023spring_41class_team8\\\\fe\\\\src\\\\pages\\\\register\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const navigate = useNavigate();\n  const [emailMsg, setEmailMsg] = useState(\"\");\n  const [passwordMsg, setPwdMsg] = useState(\"\");\n  const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n  const handleEmailChange = e => {\n    const currEmail = e.target.value;\n    setEmail(currEmail);\n    if (!validateEmail(currEmail)) {\n      setEmailMsg(\"이메일 형식이 올바르지 않습니다.\");\n    } else {\n      setEmailMsg(\"올바른 이메일 형식입니다.\");\n    }\n  };\n  const handlePasswordChange = e => {\n    const currPwd = e.target.value;\n    setPassword(currPwd);\n    if (!validatePwd(currPwd)) {\n      setPwdMsg(\"영문, 숫자, 특수기호 조합으로 10자리 이상 입력해주세요.\");\n    } else {\n      setPwdMsg(\"안전한 비밀번호입니다.\");\n    }\n  };\n  const handlePassword2Change = useCallback(e => {\n    const currConfirmPwd = e.target.value;\n    setPassword2(currConfirmPwd);\n    if (currConfirmPwd !== password) {\n      setConfirmPwdMsg(\"비밀번호가 일치하지 않습니다.\");\n    } else {\n      setConfirmPwdMsg(\"올바른 비밀번호입니다.\");\n    }\n  }, [password]);\n  const duplicateHandler = e => {\n    //중복 확인 성공하면 성공팝업, 아니면 실패 팝업\n    //const isDuplicate = checkDuplicate(); // 중복 확인 로직을 구현한 함수\n    /* if (isDuplicate) {\n      setDuplicateError(true); // 중복된 이메일이 있다면 에러 설정\n    } else {\n      setDuplicateError(false); // 중복된 이메일이 없다면 에러 해제\n      setSuccessPopup(true); // 중복 확인 성공 팝업 설정\n    } */\n    setDuplicateError(false); // 중복된 이메일이 없다면 에러 해제\n    setSuccessPopup(true); // 중복 확인 성공 팝업 설정\n  };\n\n  const validateEmail = email => {\n    return email.toLowerCase().match(/([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/);\n  };\n  const validatePassword = password => {\n    return password.toLowerCase().match(/^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{10,25}$/);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Perform register logic here, e.g., send email and password to an API for authentication\n    // password = password2 이면 로그인 아니면 팝업\n    if (password === password2) {\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n      setPassword(password);\n      setSuccessPopup(true);\n      navigate(\"/\");\n    } else {\n      setFailurePopup(true);\n    }\n  };\n  const isEmailValid = validateEmail(email);\n  const isPasswordValid = validatePassword(password);\n  const isConfirmPwd = password === password2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uBA54\\uC77C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: duplicateHandler,\n        children: \"\\uC911\\uBCF5 \\uAC80\\uC0AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), duplicateError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC911\\uBCF5\\uB41C \\uC774\\uBA54\\uC77C\\uC785\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 28\n      }, this), \" \", successPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uBA54\\uC77C\\uC785\\uB2C8\\uB2E4. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password2,\n        onChange: handlePassword2Change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), failurePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uC640 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\uC774 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 24\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onSubmit: handleSubmit,\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"HgmyacM6dJp9zPXSbS/ZygmNefs=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","password2","setPassword2","navigate","emailMsg","setEmailMsg","passwordMsg","setPwdMsg","confirmPwdMsg","setConfirmPwdMsg","handleEmailChange","e","currEmail","target","value","validateEmail","handlePasswordChange","currPwd","validatePwd","handlePassword2Change","useCallback","currConfirmPwd","duplicateHandler","setDuplicateError","setSuccessPopup","toLowerCase","match","validatePassword","handleSubmit","preventDefault","console","log","setFailurePopup","isEmailValid","isPasswordValid","isConfirmPwd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","duplicateError","successPopup","failurePopup","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/(S)samsungFLEX5/Documents/GitHub/2023spring_41class_team8/fe/src/pages/register/register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const navigate = useNavigate()\n  \n  const [emailMsg, setEmailMsg] = useState(\"\");\n  const [passwordMsg, setPwdMsg] = useState(\"\");\n  const [confirmPwdMsg, setConfirmPwdMsg]= useState(\"\")\n\n  \n  const handleEmailChange = (e) => {\n    const currEmail = e.target.value;\n    setEmail(currEmail);\n\n    if (!validateEmail(currEmail)) {\n      setEmailMsg(\"이메일 형식이 올바르지 않습니다.\")\n    } else {\n        setEmailMsg(\"올바른 이메일 형식입니다.\")\n      }\n  };\n\n  const handlePasswordChange = (e) => {\n    const currPwd = e.target.value;\n    setPassword(currPwd);\n\n    if (!validatePwd(currPwd)) {\n      setPwdMsg(\"영문, 숫자, 특수기호 조합으로 10자리 이상 입력해주세요.\")\n    } else {\n      setPwdMsg(\"안전한 비밀번호입니다.\")\n    }\n  };\n\n  const handlePassword2Change = useCallback((e) => {\n    const currConfirmPwd = e.target.value;\n    setPassword2(currConfirmPwd);\n\n    if (currConfirmPwd !== password) {\n      setConfirmPwdMsg(\"비밀번호가 일치하지 않습니다.\")\n    } else {\n      setConfirmPwdMsg(\"올바른 비밀번호입니다.\")\n    }\n  }, [password])\n\n  const duplicateHandler = (e) => {\n    //중복 확인 성공하면 성공팝업, 아니면 실패 팝업\n    //const isDuplicate = checkDuplicate(); // 중복 확인 로직을 구현한 함수\n    /* if (isDuplicate) {\n      setDuplicateError(true); // 중복된 이메일이 있다면 에러 설정\n    } else {\n      setDuplicateError(false); // 중복된 이메일이 없다면 에러 해제\n      setSuccessPopup(true); // 중복 확인 성공 팝업 설정\n    } */\n    setDuplicateError(false); // 중복된 이메일이 없다면 에러 해제\n    setSuccessPopup(true); // 중복 확인 성공 팝업 설정\n  };\n\n  \n\n  const validateEmail = (email) => {\n    return email\n      .toLowerCase()\n      .match(/([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/);\n  };\n\n  const validatePassword = (password) => {\n    return password\n      .toLowerCase()\n      .match(/^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{10,25}$/);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Perform register logic here, e.g., send email and password to an API for authentication\n    // password = password2 이면 로그인 아니면 팝업\n    if (password === password2){\n      console.log(\"Email:\", email);\n      console.log(\"Password:\", password);\n      setPassword(password);\n\n      setSuccessPopup(true);\n      navigate(\"/\");\n    } else{\n      setFailurePopup(true);\n    }\n  \n  };\n\n  const isEmailValid = validateEmail(email);\n  const isPasswordValid = validatePassword(password);\n  const isConfirmPwd = password === password2;\n\n  return (\n    <div className=\"register\">\n      <div>회원 가입</div>\n      <div>\n        <label>이메일:</label>\n        <input type=\"email\" value={email} onChange={handleEmailChange} />\n        <button type=\"submit\" onClick={duplicateHandler}>중복 검사</button>\n        {duplicateError && <div>중복된 이메일입니다.</div>} {/* 중복 에러 표시 */}\n        {successPopup && <div>사용 가능한 메일입니다. </div>} {/* 성공 팝업 표시 */}\n      </div>\n      <div>\n        <label>비밀번호:</label>\n        <input type=\"password\" value={password} onChange={handlePasswordChange} />\n      </div>\n      <div>\n        <label>비밀번호 확인:</label>\n        <input type=\"password\" value={password2} onChange={handlePassword2Change} />\n      </div>\n      {failurePopup && <div>비밀번호와 비밀번호 확인이 일치하지 않습니다.</div>} {/* 실패 팝업 표시 */}\n      <button type=\"submit\" onSubmit={handleSubmit}>제출</button>\n      \n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}